---
jobs:
- name: bump-deps
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
    - get: golang-release
    - get: weekly
      trigger: true
  - task: bump-deps
    file: golang-release/ci/tasks/shared/bump-deps.yml
    input_mapping:
      input_repo: bosh-cpi-src-in
    output_mapping:
      output_repo: bosh-cpi-src-out
    params:
      SOURCE_PATH: src/bosh-warden-cpi
  - task: test
    image: bosh-integration-image
    file: bosh-cpi-src-in/ci/tasks/test.yml
    input_mapping:
      bosh-cpi-src-in: bosh-cpi-src-out
  - put: bosh-cpi-src-out
    params:
      repository: bosh-cpi-src-out
      rebase: true

- name: bump-golang-packages
  serial: true
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
    - get: golang-release
      trigger: true
  - task: bump-golang-packages
    file: golang-release/ci/tasks/shared/bump-golang-package.yml
    input_mapping:
      input_repo: bosh-cpi-src-in
    output_mapping:
      output_repo: bosh-cpi-src-out
    params:
      PACKAGES: [ golang-1-linux ]
      PRIVATE_YML: |
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((gcp_json_key))'
  - put: bosh-cpi-src-out
    params:
      repository: bosh-cpi-src-out
      rebase: true

- name: test
  serial: true
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
      trigger: true
  - task: test
    image: bosh-integration-image
    file: bosh-cpi-src-in/ci/tasks/test.yml

- name: setup-infrastructure
  serial: true
  plan:
    - in_parallel:
      - get: bosh-cpi-src
        resource: bosh-cpi-src-in
        trigger: true
        passed:
        - test
      - get: stemcell
        resource: google-ubuntu-stemcell
    - in_parallel: &teardown_step
      - task: teardown-infrastructure
        file: bosh-cpi-src/ci/tasks/teardown-infrastructure.yml
        params:
          google_auto_network: warden-cpi-ci-auto-network
          google_json_key_data: ((gcp_json_key))
          google_network: warden-cpi-ci-network
          google_project: cloud-foundry-310819
          google_region: us-east1
          google_zone: us-east1-b
    - put: infrastructure
      params:
        env_name: warden-bosh-cpi
        terraform_source: bosh-cpi-src/ci/assets/terraform
        delete_on_failure: true
    - in_parallel: *teardown_step

- name: teardown-infrastructure
  serial: true
  plan:
    - in_parallel:
      - get: bosh-cpi-src
        resource: bosh-cpi-src-in
        trigger: true
        passed:
        - bats
      - get: bosh-cpi-release
      - get: director-creds
        passed:
        - bats
      - get: director-state
        passed:
        - bats
      - get: jumpbox-creds
        passed:
        - bats
      - get: jumpbox-state
        passed:
        - bats
      - get: infrastructure
        trigger: true
        passed:
        - bats
      - get: stemcell
        resource: google-ubuntu-stemcell
      - get: bosh-cli
        params:
          globs:
          - 'bosh-cli-*-linux-amd64'
      - get: bosh-deployment
      - get: jumpbox-deployment
    - in_parallel: *teardown_step
    - task: setup-deployment
      file: bosh-cpi-src/ci/tasks/setup-deployment.yml
    - task: teardown-director
      file: bosh-cpi-src/ci/tasks/teardown-director.yml
      params:
        google_project:                 cloud-foundry-310819
        google_region:                  us-east1
        google_zone:                    us-east1-b
        google_test_bucket_name:        bosh-warden-cpi-release-pipeline-director-env
        google_subnetwork_range:        "10.0.0.0/24"
        google_subnetwork_gw:           "10.0.0.1"
        google_address_static_director: "10.0.0.6"
        google_json_key_data:           ((gcp_json_key))
    - put: infrastructure
      params:
        env_name: warden-bosh-cpi
        terraform_source: bosh-cpi-src/ci/assets/terraform
        action: destroy
      get_params:
        terraform_source: bosh-cpi-src/ci/assets/terraform
        action: destroy

- name: deploy-director
  serial: true
  plan:
    - in_parallel:
      - get: bosh-cpi-src
        resource: bosh-cpi-src-in
        trigger: true
        passed:
        - setup-infrastructure
      - get: bosh-cpi-release
      - get: infrastructure
        trigger: true
        passed:
        - setup-infrastructure
      - get: stemcell
        resource: google-ubuntu-stemcell
        trigger: true
        passed:
        - setup-infrastructure
      - get: bosh-cli
        params:
          globs:
          - 'bosh-cli-*-linux-amd64'
      - get: bosh-deployment
      - get: jumpbox-deployment
    - task: setup-deployment
      file: bosh-cpi-src/ci/tasks/setup-deployment.yml
    - task: setup-director
      file: bosh-cpi-src/ci/tasks/setup-director.yml
      params:
        google_project:                 cloud-foundry-310819
        google_region:                  us-east1
        google_zone:                    us-east1-b
        google_test_bucket_name:        bosh-warden-cpi-release-pipeline-director-env
        google_subnetwork_range:        "10.0.0.0/24"
        google_subnetwork_gw:           "10.0.0.1"
        google_address_static_director: "10.0.0.6"
        google_json_key_data:           ((gcp_json_key))
      on_failure:
        task: teardown-director
        file: bosh-cpi-src/ci/tasks/teardown-director.yml
        params:
          google_project:                 cloud-foundry-310819
          google_region:                  us-east1
          google_zone:                    us-east1-b

          google_test_bucket_name:        bosh-warden-cpi-release-pipeline-director-env
          google_subnetwork_range:        "10.0.0.0/24"
          google_subnetwork_gw:           "10.0.0.1"
          google_address_static_director: "10.0.0.6"
          google_json_key_data:           ((gcp_json_key))
    - put: director-creds
      params: {file: director-creds/creds.yml}
    - put: director-state
      params: {file: director-state/manifest-state.json}
    - put: jumpbox-creds
      params: {file: jumpbox-creds/jumpbox-creds.yml}
    - put: jumpbox-state
      params: {file: jumpbox-state/jumpbox-manifest-state.json}
  on_failure:
    do:
    - in_parallel: *teardown_step
    - task: setup-deployment
      file: bosh-cpi-src/ci/tasks/setup-deployment.yml
    - task: teardown-director
      file: bosh-cpi-src/ci/tasks/teardown-director.yml
      params:
        google_project:                 cloud-foundry-310819
        google_region:                  us-east1
        google_zone:                    us-east1-b
        google_test_bucket_name:        bosh-warden-cpi-release-pipeline-director-env
        google_subnetwork_range:        "10.0.0.0/24"
        google_subnetwork_gw:           "10.0.0.1"
        google_address_static_director: "10.0.0.6"
        google_json_key_data:           ((gcp_json_key))

- name: bats
  serial: true
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src
      resource: bosh-cpi-src-in
      trigger: true
      passed:
      - test
    - get: bosh-acceptance-tests
    - get: warden-ubuntu-jammy-stemcell
      params:
        tarball: false
    - get: iaas-stemcell
      resource: google-ubuntu-jammy-stemcell
      params:
        tarball: false
    - get: bosh-release
    - get: garden-linux-release
    - get: bosh-deployment
    - get: bosh-cli-github-release
      params:
        globs:
          - "no-files-needed"
    - get:  infrastructure
      trigger: true
      passed:
      - deploy-director
    - get:  director-state
      passed:
      - deploy-director
    - get:  director-creds
      trigger: true
      passed:
      - deploy-director
    - get:  jumpbox-state
      passed:
      - deploy-director
    - get:  jumpbox-creds
      passed:
      - deploy-director
    - get: bosh-cpi-release
    - get: stemcell
      resource: google-ubuntu-stemcell
      passed:
      - deploy-director
    - get: bosh-cli
      params:
        globs:
        - 'bosh-cli-*-linux-amd64'
  - task: build
    image: bosh-integration-image
    file: bosh-cpi-src/ci/tasks/build.yml
  - task: bats
    file: bosh-cpi-src/ci/tasks/bats.yml
    image: bosh-integration-image
  on_failure:
    do:
    - in_parallel: *teardown_step
    - task: setup-deployment
      file: bosh-cpi-src/ci/tasks/setup-deployment.yml
    - task: teardown-director
      file: bosh-cpi-src/ci/tasks/teardown-director.yml
      params:
        google_project:                 cloud-foundry-310819
        google_region:                  us-east1
        google_zone:                    us-east1-b
        google_test_bucket_name:        bosh-warden-cpi-release-pipeline-director-env
        google_subnetwork_range:        "10.0.0.0/24"
        google_subnetwork_gw:           "10.0.0.1"
        google_address_static_director: "10.0.0.6"
        google_json_key_data:           ((gcp_json_key))

- name: promote
  serial: true
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src
      resource: bosh-cpi-src-in
      passed:
      - bats
    - get: bosh-shared-ci
  - task: promote
    file: bosh-shared-ci/tasks/release/create-final-release.yml
    input_mapping:
      release_repo: bosh-cpi-src
    image: bosh-integration-image
    params:
      GIT_USER_NAME: CI Bot
      GIT_USER_EMAIL: bots@cloudfoundry.org
      PRIVATE_YML: |
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((gcp_json_key))'
  - put: bosh-cpi-src-out
    params:
      repository: release_repo
      rebase: true
      tag: release_metadata/tag-name

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

resources:
- name: bosh-shared-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-shared-ci.git
    private_key: ((github_deploy_key_bosh-shared-ci.private_key))

- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 4:30 -0700
    days: [ Saturday ]
    initial_version: true

- name: bosh-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests
    branch: master

- name: bosh-cpi-src-in
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-warden-cpi-release.git
    branch: master
    private_key: ((github_deploy_key_bosh-warden-cpi-release.private_key))
    ignore_paths:
    - releases/**/*.yml

- name: bosh-cpi-src-out
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-warden-cpi-release.git
    branch: master
    private_key: ((github_deploy_key_bosh-warden-cpi-release.private_key))

- name: warden-ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-warden-boshlite-ubuntu-jammy-go_agent }

- name: google-ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-google-kvm-ubuntu-jammy-go_agent }

- name: bosh-release
  type: bosh-io-release
  source: { repository: cloudfoundry/bosh }

- name: garden-linux-release
  type: bosh-io-release
  source: { repository: cloudfoundry-incubator/garden-linux-release }

- name: bosh-cli-github-release
  type: github-release
  source:
    access_token: ((github_public_repo_token))
    owner: cloudfoundry
    repository: bosh-cli

- name: golang-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

- name: bosh-integration-image
  type: registry-image
  source:
    repository: bosh/integration
    username: ((dockerhub_username))
    password: ((dockerhub_password))

- name: infrastructure
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bosh-warden-cpi-release-pipeline
      prefix: ci-state/terraform-master
      credentials: ((gcp_json_key))
    vars:
      google_project:           cloud-foundry-310819
      google_region:            us-east1
      google_zone:              us-east1-b
      google_json_key_data:     ((gcp_json_key))
      google_subnetwork_range:  "10.0.0.0/24"
      google_firewall_internal: google-cpi-ci-firewall-internal
      google_firewall_external: google-cpi-ci-firewall-external
      prefix:                   wardencpi
      google_auto_network:      google-cpi-ci-auto-network
      google_network:           google-cpi-ci-network

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment
    branch: master

- name: jumpbox-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/jumpbox-deployment.git

- name: director-creds
  type: gcs-resource
  source:
    json_key:         ((gcp_json_key))
    bucket:           bosh-warden-cpi-release-pipeline
    versioned_file:   ci-state/creds.yml

- name: director-state
  type: gcs-resource
  source:
    json_key:         ((gcp_json_key))
    bucket:           bosh-warden-cpi-release-pipeline
    versioned_file:   ci-state/manifest-state.json

- name: jumpbox-creds
  type: gcs-resource
  source:
    json_key:         ((gcp_json_key))
    bucket:           bosh-warden-cpi-release-pipeline
    versioned_file:   ci-state/jumpbox-creds.yml

- name: jumpbox-state
  type: gcs-resource
  source:
    json_key:         ((gcp_json_key))
    bucket:           bosh-warden-cpi-release-pipeline
    versioned_file:   ci-state/jumpbox-manifest-state.json

- name: google-ubuntu-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent
    force_regular: true
    tarball: true

- name: bosh-cli
  source:
    access_token: ((github_public_repo_token))
    owner: cloudfoundry
    repository: bosh-cli
  type: github-release

- name: bosh-cpi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-google-cpi-release