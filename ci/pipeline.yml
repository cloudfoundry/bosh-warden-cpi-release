---
jobs:
- name: bump-deps
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
    - get: golang-release
    - get: weekly
      trigger: true
  - task: bump-deps
    file: golang-release/ci/tasks/shared/bump-deps.yml
    input_mapping:
      input_repo: bosh-cpi-src-in
    output_mapping:
      output_repo: bosh-cpi-src-out
    params:
      SOURCE_PATH: src/bosh-warden-cpi
  - task: test
    image: bosh-integration-image
    file: bosh-cpi-src-in/ci/tasks/test.yml
    input_mapping:
      bosh-cpi-src-in: bosh-cpi-src-out
  - put: bosh-cpi-src-out
    params:
      repository: bosh-cpi-src-out
      rebase: true

- name: bump-golang-packages
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
    - get: golang-release
      trigger: true
  - task: bump-golang-packages
    file: golang-release/ci/tasks/shared/bump-golang-package.yml
    input_mapping:
      input_repo: bosh-cpi-src-in
    output_mapping:
      output_repo: bosh-cpi-src-out
    params:
      PACKAGES: [ golang-1-linux ]
      PRIVATE_YML: |
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((cloud-foundry-gcp-credentials))'
  - put: bosh-cpi-src-out
    params:
      repository: bosh-cpi-src-out
      rebase: true

- name: build
  serial: true
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
      trigger: true
    - get: dev-version
      params:
        bump: patch
  - put: dev-version
    params:
      file: dev-version/number
  - task: test
    image: bosh-integration-image
    file: bosh-cpi-src-in/ci/tasks/test.yml
  - task: build
    image: bosh-integration-image
    file: bosh-cpi-src-in/ci/tasks/build.yml
    params:
      BOSH_ENVIRONMENT: ((iaas_directors_gcp-director_bosh_environment))
      BOSH_CA_CERT: ((iaas_directors_gcp-director_bosh_ca_cert.ca))
      BOSH_CLIENT: ((iaas_directors_gcp-director_bosh_client.username))
      BOSH_CLIENT_SECRET: ((iaas_directors_gcp-director_bosh_client.password))
      JUMPBOX_PRIVATE_KEY: ((iaas_directors_gcp-director_bosh_jumpbox_ssh.private_key))
      JUMPBOX_USERNAME: ((iaas_directors_gcp-director_bosh_jumpbox_username))
      JUMPBOX_IP: ((iaas_directors_gcp-director_bosh_jumpbox_ip))
  - put: pipeline-bosh-warden-cpi-tarball
    params:
      file: releases/bosh-warden-cpi-*.tgz

- name: bats
  serial: true
  plan:
  - in_parallel:
    - get: bosh-integration-image
    - get: bosh-cpi-src-in
    - get: bosh-acceptance-tests
    - get: pipeline-bosh-warden-cpi-tarball
      passed:
      - build
      trigger: true
    - get: warden-ubuntu-jammy-stemcell
      params:
        tarball: false
    - get: iaas-stemcell
      resource: google-ubuntu-jammy-stemcell
      params:
        tarball: false
    - get: dev-version
      passed:
      - build
    - get: bosh-release
    - get: garden-linux-release
    - get: bosh-cli-github-release
      params:
        globs:
          - "no-files-needed"
  - task: bats
    file: bosh-cpi-src-in/ci/tasks/bats.yml
    image: bosh-integration-image
    params:
      BOSH_ENVIRONMENT: ((iaas_directors_gcp-director_bosh_environment))
      BOSH_CA_CERT: ((iaas_directors_gcp-director_bosh_ca_cert.ca))
      BOSH_CLIENT: ((iaas_directors_gcp-director_bosh_client.username))
      BOSH_CLIENT_SECRET: ((iaas_directors_gcp-director_bosh_client.password))
      JUMPBOX_PRIVATE_KEY: ((iaas_directors_gcp-director_bosh_jumpbox_ssh.private_key))
      JUMPBOX_USERNAME: ((iaas_directors_gcp-director_bosh_jumpbox_username))
      JUMPBOX_IP: ((iaas_directors_gcp-director_bosh_jumpbox_ip))

- name: promote
  serial: true
  plan:
  - in_parallel:
    - get: dev-version
      passed: [ bats ]
      params:
        bump: major
    - get: bosh-integration-image
    - get: bosh-cpi-src
      resource: bosh-cpi-src-in
    - get: pipeline-bosh-warden-cpi-tarball
      passed:
      - bats
  - task: promote
    file: bosh-cpi-src/ci/tasks/promote.yml
    image: bosh-integration-image
    params:
      PRIVATE_YML: |
        blobstore:
          provider: gcs
          options:
            credentials_source: static
            json_key: '((cloud-foundry-gcp-credentials))'
  - put: dev-version
    params:
      file: dev-version/number
  - put: bosh-cpi-src-out
    params:
      repository: bosh-cpi-src
      rebase: true
      tag_prefix: v
      tag: bosh-cpi-src/final_version

resource_types:
- name: semver
  type: docker-image
  source:
    repository: concourse/semver-resource
    tag: 1.6

resources:
- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 4:30 -0700
    days: [ Saturday ]
    initial_version: true

- name: dev-version
  type: semver
  source:
    key: dev-version
    bucket: bosh-warden-cpi-tarball
    access_key_id: ((bosh_cpis_assume_aws_access_key.username))
    secret_access_key: ((bosh_cpis_assume_aws_access_key.password))
    assume_role_arn: ((bosh_cpis_assume_aws_access_key.role_arn))
    initial_version: 42.0.0

- name: pipeline-bosh-warden-cpi-tarball
  type: s3
  source:
    bucket: bosh-warden-cpi-tarball
    regexp: bosh-warden-cpi-(.*).tgz
    access_key_id: ((bosh_cpis_assume_aws_access_key.username))
    secret_access_key: ((bosh_cpis_assume_aws_access_key.password))
    aws_role_arn: ((bosh_cpis_assume_aws_access_key.role_arn))

- name: bosh-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-acceptance-tests
    branch: master

- name: bosh-cpi-src-in
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-warden-cpi-release.git
    branch: master
    private_key: ((github_deploy_key_bosh-warden-cpi-release.private_key))
    ignore_paths:
    - releases/**/*.yml

- name: bosh-cpi-src-out
  type: git
  source:
    uri: git@github.com:cloudfoundry/bosh-warden-cpi-release.git
    branch: master
    private_key: ((github_deploy_key_bosh-warden-cpi-release.private_key))

- name: warden-ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-warden-boshlite-ubuntu-jammy-go_agent }

- name: google-ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  source: { name: bosh-google-kvm-ubuntu-jammy-go_agent }

- name: bosh-release
  type: bosh-io-release
  source: { repository: cloudfoundry/bosh }

- name: garden-linux-release
  type: bosh-io-release
  source: { repository: cloudfoundry-incubator/garden-linux-release }

- name: bosh-cli-github-release
  type: github-release
  source:
    access_token: ((github_public_repo_token))
    owner: cloudfoundry
    repository: bosh-cli

- name: golang-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

- name: bosh-integration-image
  type: registry-image
  source:
    repository: bosh/integration
    username: ((docker.username))
    password: ((docker.password))
